Daily Cost for Config
<hr />
<a href=/>Edit Configs</a><br />


<%
#config = @dy.new_config('web')
list = @sdb.select("select * from dynamic_usage_configs where ItemName() like '#{@item_name}%'")
%>Found <%= list[:items].size %> Configurations <%
for item in list[:items]
	config_ary = item.values
	config = {}
	# TODO: fix this ugly hack, and fix tabbin
	for h in config_ary
		for key in h.keys
			value = h[key]		
			puts "key: #{key} #{key.class} valaue: #{value} #{value.class}"
			config[key.to_sym] = value.to_s
		end
	end
	puts "Class: #{item.class} #{config["type"]} $"
	#config = @dy.new_config("foo")

ami_types = @dy.get_types
puts "TYPE!!!!! #{config[:type]} CLASS: #{config[:type].class}"
ami_type = ami_types[config[:type].to_sym]
daily_matrix = @dy.calc_daily_matrix(config)
total_instance_hours_per_week = @dy.calc_total_weekly_hours(daily_matrix,config)
optimal_RIs = @dy.calc_optimal_ri(daily_matrix,total_instance_hours_per_week)
weekly_optimized_cost,riop = @dy.calc_ri_optimized_price(optimal_RIs,daily_matrix,config)
%>
<br />
Optimal Reserved Instances: <%= optimal_RIs %><br />
<img src="http://chart.apis.google.com/chart?chtt=Line+Chart&chts=000000,12&chs=1200x75&chf=bg,s,ffffff|c,s,ffffff&chxt=x,y
&chxl=0:|00:00|01:00|02:00|03:00|04:00|05:00|06:00|07:00|08:00|09:00|10:00|11:00|12:00|13:00|14:00|15:00|16:00|17:00|18:00|19:00|20:00|21:00|22:00|23:00
&cht=lc&chd=t:<% 
first = true
min = 0
max = 0
for key in daily_matrix.keys.sort
	iu = daily_matrix[key]
        noi = iu[:number_of_instances]
	min = noi if noi.to_i < min.to_i
	max = noi if noi.to_i > max.to_i
	if (first)
		%><%= noi %><%
		first = false
	else
		%>,<%= noi %><%
	end
end
%>
&chdl=Hourly+Instance+Usage
&chco=0000ff
&chls=1,1,0
&chds=<%=min%>,<%=max%>"
/>
<table border=1>
<tr>
<center><th><%= config[:name] %></th></center></tr>
<tr>
<th> Hour: </th>
<%
for hour in daily_matrix.keys.sort
	%><th><%=hour%></th><%
end
%>
<th>Total</th>
<th>RI 1 Year Cost</th>
<th>Total Annual Cost</th>
</tr>
<tr>
<th>Number of Instances</th>
<%
count = 0
for key in daily_matrix.keys.sort
	iu = daily_matrix[key]
	noi = iu[:number_of_instances]
	usage = iu[:usage]
	%><td><%=noi%></td><%
	count += noi.to_i
end
%>
<td><%=count%></td></tr>
<th>On Demand Price $<%= ami_type[:OD_hourly].to_f %></th>
<%
count = 0.0
for key in daily_matrix.keys.sort
        iu = daily_matrix[key]
        noi = iu[:number_of_instances]
        od_price = noi.to_i * ami_type[:OD_hourly].to_f
	puts "OD Price = NOI: #{noi} OD_hourly #{ ami_type[:OD_hourly].to_f}  $"
        %><td><%=od_price%></td><%
        count += od_price.to_f
end
%>
<td><%=count%></td>
<td>$0.00</td><td><%= count * 365 %></td>
</tr>
<th>RI Optimized Price</th>
<%
count = 0.0
for hour in riop.keys.sort
	rio_price = riop[hour]
        %><td><%=rio_price%></td><%
        count += rio_price.to_f
end
ri_one_year = ami_type[:RI_y1_install].to_f * optimal_RIs.to_f
%>
<td><%=count%></td>
<td><%= ri_one_year %></td><td><%= (count.to_f * 365) + ri_one_year %></td>
</tr>
</table>
<%
end
%>
